name: ASCII 🚀

on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, reopened]

# Uncomment if you want the workflow to be re-usable from other repos
# workflow_call:

permissions:
  contents: read
  # Needed only if you enable the PR comment step
  pull-requests: write

jobs:
  ascii:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show runner details
        run: |
          echo "Runner: $RUNNER_OS"
          echo "Repo: $GITHUB_REPOSITORY"
          echo "Commit: $GITHUB_SHA"

      - name: Install ASCII tools (figlet + cowsay)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y figlet cowsay

      - name: Generate ASCII art in logs
        run: |
          echo
          figlet -f slant "Hello, ASCII!"
          echo
          cowsay "CI is mooo-ving along 🐮"

      - name: Add ASCII to Job Summary
        run: |
          {
            echo "## ASCII Output"
            echo
            echo '```text'
            figlet -f banner "ASCII"
            echo
            cowsay "Shipped from GitHub Actions"
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

      # --- OPTIONAL: comment ASCII art on PRs ---
      - name: Comment ASCII on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const body = [
              "## ASCII says hi 👋",
              "",
              "```text",
              "  _    _ _____ _____ ___ ",
              " | |  | |_   _|_   _/ _ \\",
              " | |  | | | |   | || | | |",
              " | |/\\| | | |   | || | | |",
              " \\  /\\  /_| |_  | || |_| |",
              "  \\/  \\/ \\___/  \\_/ \\___/ ",
              "```",
              "",
              "_Generated by **ascii.yml**_"
            ].join("\\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
